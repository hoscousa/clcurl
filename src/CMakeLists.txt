SET(RESOURCE_COMPILER xxd)
FILE(GLOB COMPILED_RESOURCES "cl/*")
FOREACH(INPUT_FILE ${COMPILED_RESOURCES})
	get_filename_component(INPUT_NAME ${INPUT_FILE} NAME)
	get_filename_component(INPUT_PATH ${INPUT_FILE} DIRECTORY)
	SET(OUTPUT_FILE ${INPUT_PATH}/../${INPUT_NAME}.h)
	ADD_CUSTOM_COMMAND(
		OUTPUT ${OUTPUT_FILE}
		COMMAND ${RESOURCE_COMPILER} -i ${INPUT_NAME} ${OUTPUT_FILE}
		WORKING_DIRECTORY ${INPUT_PATH}
		)
	LIST(APPEND COMPILED_RESOURCES ${OUTPUT_FILE})
ENDFOREACH()

add_library (${LIBRARY_NAME} SHARED ${SOURCES} ${COMPILED_RESOURCES})

set_target_properties (${LIBRARY_NAME} PROPERTIES 
	LIBRARY_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/lib
	LINK_FLAGS -lpthread 
	)
#target_include_directories (curl PUBLIC ${CMAKE_CURRENT_SOURCE_DIR})

install(TARGETS ${LIBRARY_NAME} 
	LIBRARY DESTINATION ${PROJECT_BINARY_DIR}/lib/${LIBRARY_NAME}
	ARCHIVE DESTINATION ${PROJECT_BINARY_DIR}/lib/${LIBRARY_NAME})

# Install library headers
file(GLOB HEADERS *.h)
install(FILES ${HEADERS} DESTINATION ${PROJECT_BINARY_DIR}/include/${LIBRARY_NAME})
